name: Release test

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: 27 18 * * 4 # weekly, 18:27 on Thursday

# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners

jobs:
  release-avatica:
    strategy:
      matrix:
        gradle-version: [wrapper, rc, nightly]
    if: matrix.gradle-version == 'wrapper' || github.ref == 'refs/heads/master'
    name: 'Calcite Avatica ${{ matrix.gradle-version }}'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 50
        submodules: true
    - name: 'Set up JDK 11'
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: 'Start release environment'
      run: |
        gpg --import .github/workflows/test-key.asc
        git clone --depth 100 https://github.com/vlsi/asflike-release-environment.git ../asflike-release-environment
        cd ../asflike-release-environment
        cp .env_calcite-avatica .env
        docker-compose build vcs
        docker-compose up -d
    - name: 'Clone Calcite Avatica'
      run: |
        git clone --depth 100 https://github.com/apache/calcite-avatica.git ../calcite-avatica
        git rev-parse HEAD
    - name: 'Prepare Candidate'
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: ${{ matrix.gradle-version }}
        build-root-directory: ../calcite-avatica
        arguments: --no-parallel --no-daemon prepareVote -Prc=1 -PlocalReleasePlugins -PasfTestNexusUsername=test -PasfTestNexusPassword=test -PasfTestGitSourceUsername=test -PasfTestGitSourcePassword=test -PasfTestSvnUsername=test -PasfTestSvnPassword=test -Psigning.gnupg.keyName=289023DE2663BD17 -PuseGpgCmd -Psigning.gnupg.useLegacyGpg=true
      env:
        ORG_GRADLE_PROJECT_checksumIgnore: true
    - name: 'Publish Release'
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: ${{ matrix.gradle-version }}
        build-root-directory: ../calcite-avatica
        arguments: --no-parallel --no-daemon publishDist -Prc=1 -PlocalReleasePlugins -PasfTestNexusUsername=test -PasfTestNexusPassword=test -PasfTestGitSourceUsername=test -PasfTestGitSourcePassword=test -PasfTestSvnUsername=test -PasfTestSvnPassword=test
      env:
        ORG_GRADLE_PROJECT_checksumIgnore: true

  release-darklaf:
    strategy:
      matrix:
        gradle-version: [wrapper, rc, nightly]
    if: matrix.gradle-version == 'wrapper' || github.ref == 'refs/heads/master'
    name: 'Darklaf ${{ matrix.gradle-version }}'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 50
        submodules: true
    - name: 'Set up JDK 11'
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: 'Start release environment'
      run: |
        gpg --import .github/workflows/test-key.asc
        git clone --depth 100 https://github.com/vlsi/asflike-release-environment.git ../asflike-release-environment
        cd ../asflike-release-environment
        cp .env_darklaf .env
        docker-compose build vcs
        docker-compose up -d
    - name: 'Clone Darklaf'
      run: |
        git clone --depth 100 --branch gradle_63 https://github.com/vlsi/darklaf.git ../darklaf
        git rev-parse HEAD
    - name: 'Prepare Candidate'
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: ${{ matrix.gradle-version }}
        build-root-directory: ../darklaf
        arguments: --no-parallel --no-daemon prepareVote -Prc=1 -PlocalReleasePlugins -PghTestNexusUsername=test -PghTestNexusPassword=test -PghTestGitSourceUsername=test -PghTestGitSourcePassword=test -PghTestSvnUsername=test -PghTestSvnPassword=test -Psigning.gnupg.keyName=289023DE2663BD17 -PuseGpgCmd -Psigning.gnupg.useLegacyGpg=true
      env:
        ORG_GRADLE_PROJECT_checksumIgnore: true
    - name: 'Publish Release'
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: ${{ matrix.gradle-version }}
        build-root-directory: ../darklaf
        arguments: --no-parallel --no-daemon publishDist -Prc=1 -PlocalReleasePlugins -PghTestNexusUsername=test -PghTestNexusPassword=test -PghTestGitSourceUsername=test -PghTestGitSourcePassword=test -PghTestSvnUsername=test -PghTestSvnPassword=test
      env:
        ORG_GRADLE_PROJECT_checksumIgnore: true

  release-calcite:
    strategy:
      matrix:
        gradle-version: [wrapper, rc, nightly]
    if: matrix.gradle-version == 'wrapper' || github.ref == 'refs/heads/master'
    name: 'Calcite ${{ matrix.gradle-version }}'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 50
        submodules: true
    - name: 'Set up JDK 11'
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: 'Start release environment'
      run: |
        gpg --import .github/workflows/test-key.asc
        git clone --depth 100 https://github.com/vlsi/asflike-release-environment.git ../asflike-release-environment
        cd ../asflike-release-environment
        cp .env_calcite .env
        docker-compose build vcs
        docker-compose up -d
    - name: 'Clone Calcite'
      run: |
        git clone --depth 100 https://github.com/apache/calcite.git ../calcite
        git rev-parse HEAD
    - name: 'Prepare Candidate'
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: ${{ matrix.gradle-version }}
        build-root-directory: ../calcite
        arguments: -PskipSigning --no-parallel --no-daemon prepareVote -Prc=1 -PlocalReleasePlugins -PasfTestNexusUsername=test -PasfTestNexusPassword=test -PasfTestGitSourceUsername=test -PasfTestGitSourcePassword=test -PasfTestSvnUsername=test -PasfTestSvnPassword=test -Psigning.gnupg.keyName=289023DE2663BD17 -PuseGpgCmd -Psigning.gnupg.useLegacyGpg=true
      env:
        ORG_GRADLE_PROJECT_checksumIgnore: true
    - name: 'Publish Release'
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: ${{ matrix.gradle-version }}
        build-root-directory: ../calcite
        arguments: --no-parallel --no-daemon publishDist -Prc=1 -PlocalReleasePlugins -PasfTestNexusUsername=test -PasfTestNexusPassword=test -PasfTestGitSourceUsername=test -PasfTestGitSourcePassword=test -PasfTestSvnUsername=test -PasfTestSvnPassword=test
      env:
        ORG_GRADLE_PROJECT_checksumIgnore: true

  release-jmeter:
    strategy:
      matrix:
        gradle-version: [wrapper, rc, nightly]
    if: matrix.gradle-version == 'wrapper' || github.ref == 'refs/heads/master'
    name: 'JMeter ${{ matrix.gradle-version }}'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 50
        submodules: true
    - name: 'Set up JDK 11'
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: 'Start release environment'
      run: |
        gpg --import .github/workflows/test-key.asc
        git clone --depth 100 https://github.com/vlsi/asflike-release-environment.git ../asflike-release-environment
        cd ../asflike-release-environment
        cp .env_jmeter .env
        docker-compose build vcs
        docker-compose up -d
    - name: 'Clone JMeter'
      run: |
        git clone --depth 100 https://github.com/apache/jmeter.git ../jmeter
        git rev-parse HEAD
    - name: 'Prepare Candidate'
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: ${{ matrix.gradle-version }}
        build-root-directory: ../jmeter
        arguments: --no-parallel --no-daemon prepareVote -Prc=1 -PlocalReleasePlugins -PasfTestNexusUsername=test -PasfTestNexusPassword=test -PasfTestGitSourceUsername=test -PasfTestGitSourcePassword=test -PasfTestSvnUsername=test -PasfTestSvnPassword=test -PasfTestGitSitePreviewUsername=test -PasfTestGitSitePreviewPassword=test -Psigning.gnupg.keyName=289023DE2663BD17 -PuseGpgCmd -Psigning.gnupg.useLegacyGpg=true
      env:
        ORG_GRADLE_PROJECT_checksumIgnore: true
    - name: 'Publish Release'
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: ${{ matrix.gradle-version }}
        build-root-directory: ../jmeter
        arguments: --no-parallel --no-daemon publishDist -Prc=1 -PlocalReleasePlugins -PasfTestNexusUsername=test -PasfTestNexusPassword=test -PasfTestGitSourceUsername=test -PasfTestGitSourcePassword=test -PasfTestSvnUsername=test -PasfTestSvnPassword=test
      env:
        ORG_GRADLE_PROJECT_checksumIgnore: true

  release-autostyle:
    strategy:
      matrix:
        gradle-version: [wrapper, rc, nightly]
    if: matrix.gradle-version == 'wrapper' || github.ref == 'refs/heads/master'
    name: 'Autostyle ${{ matrix.gradle-version }}'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 50
        submodules: true
    - name: 'Set up JDK 8'
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - name: 'Start release environment'
      run: |
        gpg --import .github/workflows/test-key.asc
        git clone --depth 100 https://github.com/vlsi/asflike-release-environment.git ../asflike-release-environment
        cd ../asflike-release-environment
        cp .env_autostyle .env
        docker-compose build vcs
        docker-compose up -d
    - name: 'Clone Autostyle'
      run: |
        git clone --depth 100 https://github.com/autostyle/autostyle.git ../autostyle
        git rev-parse HEAD
    - name: 'Prepare Candidate'
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: ${{ matrix.gradle-version }}
        build-root-directory: ../autostyle
        arguments: --no-parallel --no-daemon prepareVote -Prc=1 -PlocalReleasePlugins -PghTestNexusUsername=test -PghTestNexusPassword=test -PghTestGitSourceUsername=test -PghTestGitSourcePassword=test -Psigning.gnupg.keyName=289023DE2663BD17 -PuseGpgCmd -Psigning.gnupg.useLegacyGpg=true
      env:
        ORG_GRADLE_PROJECT_checksumIgnore: true
    - name: 'Publish Release'
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: ${{ matrix.gradle-version }}
        build-root-directory: ../autostyle
        arguments: --no-parallel --no-daemon publishDist -Prc=1 -PlocalReleasePlugins -PghTestNexusUsername=test -PghTestNexusPassword=test -PghTestGitSourceUsername=test -PghTestGitSourcePassword=test
      env:
        ORG_GRADLE_PROJECT_checksumIgnore: true
